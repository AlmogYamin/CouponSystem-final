{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/common/Company.ts","./src/app/components/common/Customer.ts","./src/app/components/create-company/create-company.component.css","./src/app/components/create-company/create-company.component.html","./src/app/components/create-company/create-company.component.ts","./src/app/components/create-customer/create-customer.component.css","./src/app/components/create-customer/create-customer.component.html","./src/app/components/create-customer/create-customer.component.ts","./src/app/components/get-all-companies/get-all-companies.component.css","./src/app/components/get-all-companies/get-all-companies.component.html","./src/app/components/get-all-companies/get-all-companies.component.ts","./src/app/components/get-all-customers/get-all-customers.component.css","./src/app/components/get-all-customers/get-all-customers.component.html","./src/app/components/get-all-customers/get-all-customers.component.ts","./src/app/components/get-company-by-id/get-company-by-id.component.css","./src/app/components/get-company-by-id/get-company-by-id.component.html","./src/app/components/get-company-by-id/get-company-by-id.component.ts","./src/app/components/get-customer-by-id/get-customer-by-id.component.css","./src/app/components/get-customer-by-id/get-customer-by-id.component.html","./src/app/components/get-customer-by-id/get-customer-by-id.component.ts","./src/app/components/remove-company/remove-company.component.css","./src/app/components/remove-company/remove-company.component.html","./src/app/components/remove-company/remove-company.component.ts","./src/app/components/remove-customer/remove-customer.component.css","./src/app/components/remove-customer/remove-customer.component.html","./src/app/components/remove-customer/remove-customer.component.ts","./src/app/components/update-company/update-company.component.css","./src/app/components/update-company/update-company.component.html","./src/app/components/update-company/update-company.component.ts","./src/app/components/update-customer/update-customer.component.css","./src/app/components/update-customer/update-customer.component.html","./src/app/components/update-customer/update-customer.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<html lang=\\\"en\\\">\\n<head>\\n\\n</head>\\n\\n<body>\\n    <nav class=\\\"navbar navbar-default\\\">\\n        <div class=\\\"navbar-header\\\">\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\"\\n                    data-target=\\\".navbar-collapse\\\">\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n        </div>\\n        <div class=\\\"navbar-collapse collapse\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n                <li class=\\\"active\\\"><a href=\\\"#\\\">Refresh</a></li>\\n                <li><a routerLink=\\\"/createCompany\\\">Create Company</a></li>\\n                <li><a routerLink=\\\"/removeCompany\\\">Remove Company</a></li>\\n                <li><a routerLink=\\\"/updateCompany\\\">Update Company</a></li>\\n                <li><a routerLink=\\\"/getCompanyById\\\">Get Company by ID</a></li>\\n                <li><a routerLink=\\\"/getAllCompanies\\\">Get All Companies</a></li>\\n                <li><a routerLink=\\\"/createCustomer\\\">Create Customer</a></li>\\n                <li><a routerLink=\\\"/removeCustomer\\\">Remove Customer</a></li>\\n                <li><a routerLink=\\\"/updateCustomer\\\">Update Customer</a></li>\\n                <li><a routerLink=\\\"/getCustomerById\\\">Get Customer by ID</a></li>\\n                <li><a routerLink=\\\"/getAllCustomers\\\">Get All Customers</a></li>\\n            </ul>\\n        </div>\\n    </nav>\\n</body>\\n</html>\\n\\n\\n\\n<router-outlet></router-outlet>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {HttpModule} from '@angular/http';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\nimport { CreateCompanyComponent } from './components/create-company/create-company.component';\nimport { RemoveCompanyComponent } from './components/remove-company/remove-company.component';\nimport { UpdateCompanyComponent } from './components/update-company/update-company.component';\nimport { GetCompanyByIdComponent } from './components/get-company-by-id/get-company-by-id.component';\nimport { GetAllCompaniesComponent } from './components/get-all-companies/get-all-companies.component';\nimport { CreateCustomerComponent } from './components/create-customer/create-customer.component';\nimport { RemoveCustomerComponent } from './components/remove-customer/remove-customer.component';\nimport { UpdateCustomerComponent } from './components/update-customer/update-customer.component';\nimport { GetCustomerByIdComponent } from './components/get-customer-by-id/get-customer-by-id.component';\nimport { GetAllCustomersComponent } from './components/get-all-customers/get-all-customers.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateCompanyComponent,\n    RemoveCompanyComponent,\n    UpdateCompanyComponent,\n    GetCompanyByIdComponent,\n    GetAllCompaniesComponent,\n    CreateCustomerComponent,\n    RemoveCustomerComponent,\n    UpdateCustomerComponent,\n    GetCustomerByIdComponent,\n    GetAllCustomersComponent,\n  ],\n  imports: [\n    FormsModule,\n    HttpModule,\n    BrowserModule,\n    RouterModule.forRoot([\n      {\n        path:'createCompany',\n        component: CreateCompanyComponent\n      },\n      {\n        path:'removeCompany',\n        component: RemoveCompanyComponent\n      },\n      {\n        path:'updateCompany',\n        component: UpdateCompanyComponent\n      },\n      {\n        path:'getCompanyById',\n        component: GetCompanyByIdComponent\n      },\n      {\n        path:'getAllCompanies',\n        component: GetAllCompaniesComponent\n      },\n      {\n        path:'createCustomer',\n        component: CreateCustomerComponent\n      },\n      {\n        path:'removeCustomer',\n        component: RemoveCustomerComponent\n      },\n      {\n        path:'updateCustomer',\n        component: UpdateCustomerComponent\n      },\n      {\n        path:'getCustomerById',\n        component: GetCustomerByIdComponent\n      },\n      {\n        path:'getAllCustomers',\n        component: GetAllCustomersComponent\n      }\n    ])\n  ],\n  providers:  [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","export class Company{\r\n    constructor (\r\n        public id?:number,\r\n        public compName?:String,\r\n        public password?:String,\r\n        public email?:String)\r\n    {\r\n\r\n    }\r\n\r\n    // get id() : number\r\n    // {\r\n    //     return this.id;\r\n    // }\r\n    // set id(newID : number)\r\n    // {\r\n    //     this._id = newID;\r\n    // }\r\n\r\n    // get compName() : String\r\n    // {\r\n    //     return this.compName;\r\n    // }\r\n    // set compName(newCompName : String)\r\n    // {\r\n    //     this._compName = newCompName;\r\n    // }\r\n\r\n    // get password() : String\r\n    // {\r\n    //     return this.password;\r\n    // }\r\n    // set password(newPassword : String)\r\n    // {\r\n    //     this._password = newPassword;\r\n    // }\r\n\r\n    // get email() : String\r\n    // {\r\n    //     return this.email;\r\n    // }\r\n    // set email(newEmail : String)\r\n    // {\r\n    //     this._email = newEmail;\r\n    // }\r\n\r\n\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/common/Company.ts","export class Customer{\r\n    constructor (public id?:number,\r\n                public custName?:String,\r\n                public password?:String)\r\n    {\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/common/Customer.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/create-company/create-company.component.css\n// module id = ./src/app/components/create-company/create-company.component.css\n// module chunks = main","module.exports = \"<form class=\\\"form-horizontal\\\" style=\\\"margin-left: 20px\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"companyName\\\" class=\\\"control-label col-sm-2\\\">Company Name</label>\\n        <div class=\\\"col-sm-6\\\">\\n            <input class=\\\"form-control\\\" placeholder=\\\"Insert New Company Name\\\"\\n            [(ngModel)] = \\\"company.compName\\\" \\n            type=\\\"text\\\" id=\\\"companyName\\\" name=\\\"companyName\\\" />\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"inputPassword\\\" class=\\\"control-label col-sm-2\\\">Password</label>\\n        <div class=\\\"col-sm-6\\\">\\n            <input class=\\\"form-control\\\" placeholder=\\\"Insert New Password\\\"\\n            [(ngModel)] = \\\"company.password\\\"\\n            type=\\\"password\\\" id=\\\"inputPassword\\\" name=\\\"password\\\"/>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"inputEmail\\\" class=\\\"control-label col-sm-2\\\">Email</label>\\n        <div class=\\\"col-sm-6\\\">\\n            <input class=\\\"form-control\\\" placeholder=\\\"Insert Your Email\\\"\\n            [(ngModel)] = \\\"company.email\\\"\\n            type=\\\"text\\\" id=\\\"inputEmail\\\" name=\\\"email\\\"/>\\n        </div>\\n\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n        <button (click)=\\\"createCompany()\\\" class=\\\"btn btn-default\\\">Create Company</button>\\n        </div>\\n    </div>\\n    \\n    <pre>\\n      {{company | json}}\\n    </pre>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/create-company/create-company.component.html\n// module id = ./src/app/components/create-company/create-company.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {Company} from '../common/Company';\nimport {Http} from '@angular/http';\nimport swal from 'sweetalert2';\n\n\n\n@Component({\n  selector: 'app-create-company',\n  templateUrl: './create-company.component.html',\n  styleUrls: ['./create-company.component.css']\n})\nexport class CreateCompanyComponent implements OnInit {\n\n  public company : Company = new Company();\n\n  \n  constructor(private _http : Http) { }\n\n  ngOnInit() {\n  }\n\n  public createCompany()\n  {\n        this._http.post('http://localhost:8080/adminApi/createCompany'\n        ,this.company).subscribe(function(response)\n        {\n         console.log(response);\n        });\n\n        swal({\n          position: 'center',\n          type: 'success',\n          title: 'Success!',\n          text:'Your Company Has Been Saved',\n          showConfirmButton: false,\n          timer: 1800\n          })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/create-company/create-company.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/create-customer/create-customer.component.css\n// module id = ./src/app/components/create-customer/create-customer.component.css\n// module chunks = main","module.exports = \"\\n<form class=\\\"form-horizontal\\\" style=\\\"margin-left: 20px\\\">\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"customerName\\\" class=\\\"control-label col-sm-2\\\">Customer Name</label>\\n      <div class=\\\"col-sm-6\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Insert New Customer Name\\\"\\n          [(ngModel)] = \\\"customer.custName\\\"\\n                  type=\\\"text\\\" id=\\\"customerName\\\" name=\\\"cutomerName\\\" />\\n      </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"inputPassword\\\" class=\\\"control-label col-sm-2\\\">Password</label>\\n      <div class=\\\"col-sm-6\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Insert New Password\\\"\\n          [(ngModel)] = \\\"customer.password\\\"\\n                  type=\\\"password\\\" id=\\\"inputPassword\\\" name=\\\"password\\\"/>\\n      </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n        <button (click)=\\\"createCustomer()\\\" class=\\\"btn btn-default\\\">Create Customer</button>\\n      </div>\\n  </div>\\n  <pre>\\n        {{customer | json}}\\n   </pre>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/create-customer/create-customer.component.html\n// module id = ./src/app/components/create-customer/create-customer.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport {Customer} from '../common/Customer';\n\nimport {Http} from '@angular/http';\n\nimport swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-create-customer',\n  templateUrl: './create-customer.component.html',\n  styleUrls: ['./create-customer.component.css']\n})\nexport class CreateCustomerComponent implements OnInit {\n\n  public customer : Customer = new Customer();\n\n  constructor(private _http : Http) { }\n\n  ngOnInit() {\n  }\n\n  public createCustomer()\n  {\n     this._http.post('http://localhost:8080/adminApi/createCustomer'\n     ,this.customer).subscribe(function(response)\n     {\n       console.log(response);\n     });\n\n     swal({\n      position: 'center',\n      type: 'success',\n      title: 'Your Customer has been saved',\n      showConfirmButton: false,\n      timer: 1500\n    })\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/create-customer/create-customer.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/get-all-companies/get-all-companies.component.css\n// module id = ./src/app/components/get-all-companies/get-all-companies.component.css\n// module chunks = main","module.exports = \"<table style=\\\"margin-left: 10px\\\" class=\\\"table table-striped table-bordered\\\">\\n    <thead>\\n        <tr>\\n            <th>Id</th>\\n            <th>Name</th>\\n            <th>Password</th>\\n            <th>Email</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let c of _companies\\\">\\n            <td>{{c.id}}</td>\\n            <td>{{c.compName}}</td>\\n            <td>{{c.password}}</td>\\n            <td>{{c.email}}</td>\\n        </tr>\\n    </tbody>\\n</table>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/get-all-companies/get-all-companies.component.html\n// module id = ./src/app/components/get-all-companies/get-all-companies.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {Company} from '../common/Company';\nimport 'rxjs/add/operator/map';\nimport {Http} from '@angular/http';\n\n\n@Component({\n  selector: 'app-get-all-companies',\n  templateUrl: './get-all-companies.component.html',\n  styleUrls: ['./get-all-companies.component.css']\n})\nexport class GetAllCompaniesComponent implements OnInit {\n\n  public _companies : Company[] = [];\n\n  constructor(private _http : Http) { }\n\n  ngOnInit() {\n    var self = this;\n    this._http.get('http://localhost:8080/adminApi/getAllCompanies')\n    .map(\n      function (companyResponse)\n      {\n        return companyResponse.json();\n      }\n      ).subscribe(\n        function(companies)\n        {\n          for(let c of companies)\n            {\n              console.log(c);\n            }\n          self._companies = companies;\n        }\n      )\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/get-all-companies/get-all-companies.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/get-all-customers/get-all-customers.component.css\n// module id = ./src/app/components/get-all-customers/get-all-customers.component.css\n// module chunks = main","module.exports = \"<table style=\\\"margin-left: 10px\\\" class=\\\"table table-striped table-bordered\\\">\\n  <thead>\\n      <tr>\\n          <th>Id</th>\\n          <th>Name</th>\\n          <th>Password</th>\\n      </tr>\\n  </thead>\\n  <tbody>\\n      <tr *ngFor=\\\"let c of _customers\\\">\\n          <td>{{c.id}}</td>\\n          <td>{{c.custName}}</td>\\n          <td>{{c.password}}</td>\\n      </tr>\\n  </tbody>\\n</table>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/get-all-customers/get-all-customers.component.html\n// module id = ./src/app/components/get-all-customers/get-all-customers.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport {Customer} from '../common/Customer';\n\nimport 'rxjs/add/operator/map';\n\nimport {Http} from '@angular/http';\n\n@Component({\n  selector: 'app-get-all-customers',\n  templateUrl: './get-all-customers.component.html',\n  styleUrls: ['./get-all-customers.component.css']\n})\nexport class GetAllCustomersComponent implements OnInit {\n\n  public _customers : Customer[] = [\n\n  ];\n\n  constructor(private _http : Http) { }\n\n  ngOnInit() {\n    var self = this;\n    this._http.get('http://localhost:8080/adminApi/getAllCustomers')\n    .map(\n      function (customerResponse)\n      {\n        return customerResponse.json();\n      }\n    ).subscribe(\n      function(customers)\n      {\n        for(let c of customers)\n        {\n          console.log(c);\n        }\n        self._customers = customers;\n      }\n    )\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/get-all-customers/get-all-customers.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/get-company-by-id/get-company-by-id.component.css\n// module id = ./src/app/components/get-company-by-id/get-company-by-id.component.css\n// module chunks = main","module.exports = \"<form class=\\\"form-horizontal\\\" style=\\\"margin-left: 20px\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"companyId\\\" class=\\\"control-label col-sm-2\\\">Get Company By ID</label>\\n    <div class=\\\"col-sm-6\\\">\\n        <input class=\\\"form-control\\\" placeholder=\\\"Insert The Company ID\\\"\\n                type=\\\"number\\\" name=\\\"idtoget\\\" [(ngModel)] = \\\"idtoget\\\" />\\n    </div>\\n  </div>\\n<div class=\\\"form-group\\\">\\n    <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n        <button (click)= \\\"getCompany()\\\" type=\\\"get\\\" class=\\\"btn btn-default\\\">Get <span class=\\\"glyphicon glyphicon-search\\\"></span></button>\\n    </div>\\n</div> \\n<table style=\\\"margin-left: 10px\\\" class=\\\"table table-striped table-bordered\\\">\\n        <thead>\\n            <tr>\\n                <th>Id</th>\\n                <th>Name</th>\\n                <th>Password</th>\\n                <th>Email</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr>\\n                <td>{{_company.id}}</td>\\n                <td>{{_company.compName}}</td>\\n                <td>{{_company.password}}</td>\\n                <td>{{_company.email}}</td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/get-company-by-id/get-company-by-id.component.html\n// module id = ./src/app/components/get-company-by-id/get-company-by-id.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport {Company} from '../common/Company';\n\nimport 'rxjs/add/operator/map';\n\nimport {Http} from '@angular/http';\n\n@Component({\n  selector: 'app-get-company-by-id',\n  templateUrl: './get-company-by-id.component.html',\n  styleUrls: ['./get-company-by-id.component.css']\n})\nexport class GetCompanyByIdComponent implements OnInit {\n\n  public _company : Company;\n  public idtoget : Number;\n\n\n  constructor(private _http : Http) { }\n  \n  ngOnInit() {\n  }\n\n  public getCompany()\n  {\n    // var url = 'http://localhost:8080/adminApi/getCompany/' + this.idtoget;\n    var self = this;\n    this._http.get('http://localhost:8080/adminApi/getCompany/' + this.idtoget)\n    .map(\n    function (companyResponse)\n      {\n        return companyResponse.json();\n      }\n    ).subscribe(\n      function(company)\n      {\n        self._company = company;\n      }\n    )\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/get-company-by-id/get-company-by-id.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/get-customer-by-id/get-customer-by-id.component.css\n// module id = ./src/app/components/get-customer-by-id/get-customer-by-id.component.css\n// module chunks = main","module.exports = \"<form class=\\\"form-horizontal\\\" style=\\\"margin-left: 20px\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"customerId\\\" class=\\\"control-label col-sm-2\\\">Customer Id</label>\\n    <div class=\\\"col-sm-6\\\">\\n        <input class=\\\"form-control\\\" placeholder=\\\"Insert The Customer ID\\\"\\n                type=\\\"number\\\" name=\\\"idtoget\\\" [(ngModel)] = \\\"idtoget\\\"/>\\n    </div>\\n  </div>\\n<div class=\\\"form-group\\\">\\n    <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n        <button (click)= \\\"getCustomer()\\\" type=\\\"get\\\" class=\\\"btn btn-default\\\">Get</button>\\n    </div>\\n</div>\\n<table style=\\\"margin-left: 10px\\\" class=\\\"table table-striped table-bordered\\\">\\n    <thead>\\n        <tr>\\n            <th>Id</th>\\n            <th>Name</th>\\n            <th>Password</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr>\\n            <td>{{_customer.id}}</td>\\n            <td>{{_customer.custName}}</td>\\n            <td>{{_customer.password}}</td>\\n        </tr>\\n    </tbody>\\n</table>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/get-customer-by-id/get-customer-by-id.component.html\n// module id = ./src/app/components/get-customer-by-id/get-customer-by-id.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport {Customer} from '../common/Customer';\n\nimport 'rxjs/add/operator/map';\n\nimport {Http} from '@angular/http';\n\n@Component({\n  selector: 'app-get-customer-by-id',\n  templateUrl: './get-customer-by-id.component.html',\n  styleUrls: ['./get-customer-by-id.component.css']\n})\nexport class GetCustomerByIdComponent implements OnInit {\n\n  public _customer : Customer;\n  public idtoget : Number;\n  \n  getCustomer()\n  {\n    var url = \"http://localhost:8080/adminApi/getCustomer/\" + this.idtoget;\n    var self = this;\n    this._http.get(url)\n    .map(\n    function (customerResponse)\n      {\n        return customerResponse.json();\n      }\n    ).subscribe(\n      function(customer)\n      {\n        self._customer = customer;\n      }\n    )\n  }\n\n  constructor(private _http : Http) { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/get-customer-by-id/get-customer-by-id.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/remove-company/remove-company.component.css\n// module id = ./src/app/components/remove-company/remove-company.component.css\n// module chunks = main","module.exports = \"<form class=\\\"form-horizontal\\\" style=\\\"margin-left: 20px\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"companyId\\\" class=\\\"control-label col-sm-2\\\">Company Id</label>\\n      <div class=\\\"col-sm-6\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Insert Company ID To Remove\\\"\\n                  type=\\\"number\\\" name=\\\"companyId\\\" [(ngModel)] = \\\"idtoremove\\\" />\\n      </div>\\n    </div>\\n<hr>\\n    <div class=\\\"form-group\\\">\\n        <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n            <button (click)= \\\"removeCompany()\\\" type=\\\"remove\\\" class=\\\"btn btn-default\\\">Remove <span class=\\\"glyphicon glyphicon-floppy-remove\\\"></span></button>\\n        </div>\\n    </div>\\n  </form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/remove-company/remove-company.component.html\n// module id = ./src/app/components/remove-company/remove-company.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport {Company} from '../common/Company';\n\nimport {Http} from '@angular/http';\n\nimport swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-remove-company',\n  templateUrl: './remove-company.component.html',\n  styleUrls: ['./remove-company.component.css']\n})\nexport class RemoveCompanyComponent implements OnInit {\n\n  public company : Company = new Company();\n  public idtoremove : Number;\n  \n  // dependancy injection for http object ->will become\n  // a member of this class\n  constructor(private _http : Http) { }\n\n  ngOnInit() {\n  }\n\n  removeCompany(){\n\n    const swalWithBootstrapButtons = swal.mixin({\n      confirmButtonClass: 'btn btn-success',\n      cancelButtonClass: 'btn btn-danger',\n      buttonsStyling: false,\n    })\n    \n    swalWithBootstrapButtons({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, cancel!',\n      reverseButtons: true\n    }).then((result) => {\n      if (result.value) {\n          var url = 'http://localhost:8080/adminApi/removeCompany/' + this.idtoremove;\n          this._http.delete(url).subscribe(function(response)\n            {\n              console.log(response);\n            });\n            swalWithBootstrapButtons(\n              'Deleted!',\n              'Your Company has been deleted.',\n              'success'\n            )\n          } else if (\n            result.dismiss === swal.DismissReason.cancel\n          ) {\n            swalWithBootstrapButtons(\n              'Cancelled',\n              'Your Company is safe :)',\n              'error'\n            )\n          }\n        })\n    \n    \n    \n        }\n       }    \n\n\n// WEBPACK FOOTER //\n// ./src/app/components/remove-company/remove-company.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/remove-customer/remove-customer.component.css\n// module id = ./src/app/components/remove-customer/remove-customer.component.css\n// module chunks = main","module.exports = \"<form class=\\\"form-horizontal\\\" style=\\\"margin-left: 20px\\\">\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"customerId\\\" class=\\\"control-label col-sm-2\\\">Customer Id</label>\\n      <div class=\\\"col-sm-6\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Insert Customer ID To Remove\\\"\\n                  type=\\\"text\\\" name=\\\"customerId\\\" [(ngModel)] = \\\"idtoremove\\\" />\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n            <button (click)= \\\"removeCustomer()\\\" type=\\\"remove\\\" class=\\\"btn btn-default\\\">Remove</button>\\n        </div>\\n    </div>\\n  </form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/remove-customer/remove-customer.component.html\n// module id = ./src/app/components/remove-customer/remove-customer.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport {Customer} from '../common/Customer';\n\nimport {Http} from '@angular/http';\n\nimport swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-remove-customer',\n  templateUrl: './remove-customer.component.html',\n  styleUrls: ['./remove-customer.component.css']\n})\nexport class RemoveCustomerComponent implements OnInit {\n\n  public customer : Customer = new Customer();\n  public idtoremove : Number;\n  \n  // dependancy injection for http object ->will become\n  // a member of this class\n  constructor(private _http : Http) { }\n\n  ngOnInit() {\n  }\n\n  removeCustomer(){\n\n    const swalWithBootstrapButtons = swal.mixin({\n      confirmButtonClass: 'btn btn-success',\n      cancelButtonClass: 'btn btn-danger',\n      buttonsStyling: false,\n    })\n    swalWithBootstrapButtons({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, cancel!',\n      reverseButtons: true\n    }).then((result) => {\n      if (result.value) {\n          var url = 'http://localhost:8080/adminApi/removeCustomer/' + this.idtoremove;\n        \n          this._http.delete(url).subscribe(function(response)\n          {\n            console.log(response);\n          });\n          swalWithBootstrapButtons(\n            'Deleted!',\n            'Your Customer has been deleted.',\n            'success'\n          )\n        } else if (\n          result.dismiss === swal.DismissReason.cancel\n        ) {\n          swalWithBootstrapButtons(\n            'Cancelled',\n            'Your Customer is safe :)',\n            'error'\n          )\n        }\n      })\n  \n  \n  \n      }\n     }\n  \n  \n  \n\n\n// WEBPACK FOOTER //\n// ./src/app/components/remove-customer/remove-customer.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/update-company/update-company.component.css\n// module id = ./src/app/components/update-company/update-company.component.css\n// module chunks = main","module.exports = \"<form class=\\\"form-horizontal\\\" style=\\\"margin-left: 20px\\\">\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"companyId\\\" class=\\\"control-label col-sm-2\\\">Company Id</label>\\n    <div class=\\\"col-sm-6\\\">\\n        <input class=\\\"form-control\\\" placeholder=\\\"Insert Company ID To Update\\\"\\n        [(ngModel)] = \\\"company.id\\\" \\n                type=\\\"text\\\" id=\\\"companyId\\\" name=\\\"companyId\\\"/>\\n    </div>\\n  </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"inputPassword\\\" class=\\\"control-label col-sm-2\\\">Password</label>\\n      <div class=\\\"col-sm-6\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Insert New Password\\\"\\n          [(ngModel)] = \\\"company.password\\\"\\n                  type=\\\"password\\\" id=\\\"inputPassword\\\" name=\\\"password\\\"/>\\n      </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"inputEmail\\\" class=\\\"control-label col-sm-2\\\">Email</label>\\n    <div class=\\\"col-sm-6\\\">\\n        <input class=\\\"form-control\\\" placeholder=\\\"Insert Your Email\\\"\\n        [(ngModel)] = \\\"company.email\\\"\\n                type=\\\"text\\\" id=\\\"inputEmail\\\" name=\\\"email\\\"/>\\n    </div>\\n</div>\\n\\n    <div class=\\\"form-group\\\">\\n        <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n            <button (click)=\\\"updateCompany()\\\" class=\\\"btn btn-default\\\">Update Company <span class=\\\"glyphicon glyphicon-floppy-saved\\\"></span></button>\\n        </div>\\n    </div>\\n\\n    <pre>\\n        {{company | json}}\\n    </pre>\\n  </form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/update-company/update-company.component.html\n// module id = ./src/app/components/update-company/update-company.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport {Company} from '../common/Company';\n\nimport {Http} from '@angular/http';\n\nimport swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-update-company',\n  templateUrl: './update-company.component.html',\n  styleUrls: ['./update-company.component.css']\n})\nexport class UpdateCompanyComponent implements OnInit {\n\n  public company : Company = new Company();\n\n  // dependancy injection for http object ->will become\n  // a member of this class\n  constructor(private _http : Http) { }\n\n  ngOnInit() {\n  }\n\n  public updateCompany()\n  {\n    this._http.put ('http://localhost:8080/adminApi/updateCompany'\n    ,this.company).subscribe(function(response)\n   {\n     console.log(response);\n   });\n\n   swal({\n    position: 'center',\n    type: 'success',\n    title: 'Success!',\n    text:'Your Company Has Been Updated',\n    showConfirmButton: false,\n    timer: 1800\n    })\n}\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/update-company/update-company.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/update-customer/update-customer.component.css\n// module id = ./src/app/components/update-customer/update-customer.component.css\n// module chunks = main","module.exports = \"<form class=\\\"form-horizontal\\\" style=\\\"margin-left: 20px\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"customerId\\\" class=\\\"control-label col-sm-2\\\">Customer Id</label>\\n    <div class=\\\"col-sm-6\\\">\\n        <input class=\\\"form-control\\\" placeholder=\\\"Insert Customer ID To Update\\\"\\n        [(ngModel)] = \\\"customer.id\\\" \\n                type=\\\"text\\\" id=\\\"customerId\\\" name=\\\"customerId\\\" />\\n    </div>\\n  </div>\\n<div class=\\\"form-group\\\">\\n  <label for=\\\"inputPassword\\\" class=\\\"control-label col-sm-2\\\">Password</label>\\n  <div class=\\\"col-sm-6\\\">\\n      <input class=\\\"form-control\\\" placeholder=\\\"Insert New Password\\\"\\n      [(ngModel)] = \\\"customer.password\\\"\\n              type=\\\"password\\\" id=\\\"inputPassword\\\" name=\\\"password\\\"/>\\n  </div>\\n</div>\\n<div class=\\\"form-group\\\">\\n    <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n        <button (click)=\\\"updateCustomer()\\\" type=\\\"updatae\\\" class=\\\"btn btn-default\\\">Update</button>\\n    </div>\\n</div>\\n<pre>\\n  {{customer | json}}\\n</pre>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/update-customer/update-customer.component.html\n// module id = ./src/app/components/update-customer/update-customer.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport { Customer} from '../common/Customer';\n\nimport {Http} from '@angular/http';\n\nimport swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-update-customer',\n  templateUrl: './update-customer.component.html',\n  styleUrls: ['./update-customer.component.css']\n})\nexport class UpdateCustomerComponent implements OnInit {\n\n  public customer : Customer = new Customer();\n\n  // dependancy injection for http object ->will become\n  // a member of this class\n  constructor(private _http : Http) { }\n\n  ngOnInit() {\n  }\n\n  public updateCustomer()\n  {\n    this._http.put ('http://localhost:8080/adminApi/updateCustomer'\n    ,this.customer).subscribe(function(response)\n   {\n     console.log(response);\n   });\n\n   swal({\n    position: 'center',\n    type: 'success',\n    title: 'Success!',\n    text:'Your Customer Has Been Updated',\n    showConfirmButton: false,\n    timer: 1800\n    })\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/update-customer/update-customer.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}